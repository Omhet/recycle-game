{"version":3,"sources":["assets/sprites/waste/general.png","assets/sprites/waste/plastic/bottle.png","assets/sprites/waste/glass/bottle.png","assets/sprites/waste/metal/can.png","assets/sprites/waste/paper/ball.png","assets/sprites/bin sync /^/.//.*/.png$","assets/sprites/bin/glass-bin/dead.png","assets/sprites/bin/glass-bin/idle.png","assets/sprites/bin/glass-bin/joy.png","assets/sprites/bin/glass-bin/puke.png","assets/sprites/bin/metal-bin/dead.png","assets/sprites/bin/metal-bin/idle.png","assets/sprites/bin/metal-bin/joy.png","assets/sprites/bin/metal-bin/puke.png","assets/sprites/bin/paper-bin/dead.png","assets/sprites/bin/paper-bin/idle.png","assets/sprites/bin/paper-bin/joy.png","assets/sprites/bin/paper-bin/puke.png","assets/sprites/bin/plastic-bin/dead.png","assets/sprites/bin/plastic-bin/idle.png","assets/sprites/bin/plastic-bin/joy.png","assets/sprites/bin/plastic-bin/puke.png","assets/sprites/background/gradient.png","assets/sprites/background/floor.png","assets/sprites/background/pavement.png","assets/sprites/background/grass.png","assets/sprites/background/shrub.png","assets/sprites/background/city.png","assets/sprites/background/city-back.png","assets/sprites/background sync /^/.//cloud/-.*/.png$","assets/sprites/background/cloud-0.png","assets/sprites/background/cloud-1.png","assets/sprites/background/cloud-2.png","assets/fonts/font.png","assets/fonts/font.fnt","assets/sprites/logo.png","assets/sprites/play.png","assets/sprites/icon.png","assets/sprites/heart.png","assets/sounds/main.mp3","assets/sounds/puke.mp3","assets/sounds/joy.mp3","assets/sounds/pop.mp3","assets/sounds/whoosh.mp3","assets/sounds/stop.mp3","assets/sounds/ding.mp3","assets/sounds/heartbeat.mp3","constants/index.js","utils/LevelManager.js","utils/misc.js","gui/Text.js","gui/Score.js","gui/GameOver.js","gui/Lives.js","gui/MaxScore.js","scenes/Boot.js","sprites/helpers/addCommonMethods.js","sprites/waste/Waste.js","sprites/waste/types/General.js","sprites/waste/types/Plastic.js","sprites/waste/types/Glass.js","sprites/waste/types/Metal.js","sprites/waste/types/Paper.js","sprites/waste/WasteFactory.js","sprites/bin/Bin.js","sprites/bin/types/Plastic.js","sprites/bin/types/Glass.js","sprites/bin/types/Metal.js","sprites/bin/types/Paper.js","sprites/bin/BinFactory.js","sprites/general/Life.js","scenes/Main.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","scenes","objects","waste","general","plastic","bottle","glass","metal","can","paper","ball","bin","back","gradient","floor","pavement","grass","shrub","city","cityBack","clouds","cloud0","cloud1","cloud2","animations","idle","joy","puke","dead","wasteType","fonts","images","sounds","gameOptions","showStartScreen","lives","LevelManager","constructor","this","level","wasteThrowDelay","numberOfWastes","binsThatLevelUp","fillLimit","wasteProbability","levelUp","bins","Math","max","getAnimationName","animationType","getImageSize","key","textures","get","getSourceImage","width","height","Text","GameObjects","scene","text","x","y","fontSize","super","align","fontStyle","shadow","offsetX","offsetY","color","fill","wordWrap","game","config","useAdvancedWrap","add","existing","Score","Group","score","icon","image","setDepth","setPosition","offset","setScore","iconTween","restart","setText","setOrigin","tweens","targets","duration","ease","props","angle","value","scale","yoyo","GameOver","Container","i","addLife","heartWidth","call","life","push","increaseLives","length","decreaseLives","pop","onComplete","destroy","maxScore","sumW","padding","Boot","Scene","preload","boxWidth","boxX","boxY","loading","percent","progressBar","graphics","progressBox","fillStyle","fillRoundedRect","load","on","clear","barOffset","boxHeight","parseInt","require","values","anim","spritesheet","frameWidth","frameHeight","bitmapFont","audio","create","start","commonMethods","dispose","getRandomVelocity","velX","Phaser","Between","velY","getRandomAngleVelocity","dir","RND","realInRange","throw","setVisible","setVelocity","throwWithRandomAngle","angleVel","setAngularVelocity","addCommonMethods","obj","methodName","Waste","Physics","Matter","Sprite","type","matter","world","setBounce","General","Plastic","Glass","Metal","Paper","WasteFactory","wasteTypes","getRandomWaste","neededType","probability","shouldGiveNeededType","getOfType","pick","getWasteOfType","Bin","setDisplaySize","size","setSensor","setStatic","animJoy","animIdle","animPuke","animDead","binImage","sprite","anims","play","handleAnimationComplete","die","checkIfTypeMatch","checkIfFull","limit","hitWrong","sound","hitRight","volume","increaseFill","binTypes","getRandomBin","types","getRandomBinExceptOf","filter","t","Life","setInteractive","setScale","Main","worldBounds","setBounds","wallOffset","levelManager","binsFilled","menuGroup","group","music","loop","addBackground","addAnimations","wasteFactory","wastes","binFactory","BinFactory","gestures","swipe","threshold","velocityThreshold","direction","handleSwipe","prepareToStart","logoScale","logo","repeat","repeatDelay","localStorage","getItem","maxScoreGUI","MaxScore","addMultiple","getChildren","moto","once","callbackScope","toggleVisible","active","rate","startGame","startWasteTimer","startLivesTimer","addScore","livesGUI","Lives","gameOver","stop","wasteTimer","livesTimer","scoreGUI","gameOverGUI","prevMaxScore","setItem","input","cameras","main","flash","cam","progress","floorTop","fillSceneContinuous","pavementTop","fillScene","grassTop","addClouds","leftToRight","cloudTimer","time","addEvent","delay","callback","addCloud","index","toFixed","initX","finalX","cloud","getEnd","imageHeight","imageWidth","ceil","abs","addBinAnimations","animName","isIdle","isDead","frameRate","frames","generateFrameNumbers","handleWasteCollideWalls","gameObjectA","diposeWaste","handleWasteCollideBin","body","velocity","hitBin","shake","replaceBin","oldBinMoved","startNewLevel","moveWasteAway","wasteIndex","findIndex","el","splice","throwLife","detune","min","matterCollision","addOnCollideStart","objectA","objectB","walls","left","right","bottom","context","throwWaste","createWasteOfBinType","addCollisionToWaste","createRandomWaste","up","down","vx","getVelocityX","vy","getVelocityY","forEach","getBounds","top","isIntersecting","CANVAS","title","url","process","version","physics","default","gravity","debug","enableSleeping","plugins","plugin","GesturesPlugin","mapping","PhaserMatterCollisionPlugin","disableContextMenu","backgroundColor","mode","Scale","FIT","autoCenter","CENTER_BOTH","maxRatio","window","onload","perfectRatio","innerWidth","innerHeight","actualRatio","Game","focus"],"mappings":"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","file":"static/js/main.b572f1cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/general.4d34993d.png\";","module.exports = __webpack_public_path__ + \"static/media/bottle.bc74d347.png\";","module.exports = __webpack_public_path__ + \"static/media/bottle.c1fe3920.png\";","module.exports = __webpack_public_path__ + \"static/media/can.704b02d9.png\";","module.exports = __webpack_public_path__ + \"static/media/ball.b4c6ce66.png\";","var map = {\n\t\"./glass-bin/dead.png\": 1459,\n\t\"./glass-bin/idle.png\": 1460,\n\t\"./glass-bin/joy.png\": 1461,\n\t\"./glass-bin/puke.png\": 1462,\n\t\"./metal-bin/dead.png\": 1463,\n\t\"./metal-bin/idle.png\": 1464,\n\t\"./metal-bin/joy.png\": 1465,\n\t\"./metal-bin/puke.png\": 1466,\n\t\"./paper-bin/dead.png\": 1467,\n\t\"./paper-bin/idle.png\": 1468,\n\t\"./paper-bin/joy.png\": 1469,\n\t\"./paper-bin/puke.png\": 1470,\n\t\"./plastic-bin/dead.png\": 1471,\n\t\"./plastic-bin/idle.png\": 1472,\n\t\"./plastic-bin/joy.png\": 1473,\n\t\"./plastic-bin/puke.png\": 1474\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1458;","module.exports = __webpack_public_path__ + \"static/media/dead.573cb6fa.png\";","module.exports = __webpack_public_path__ + \"static/media/idle.09fb80fe.png\";","module.exports = __webpack_public_path__ + \"static/media/joy.12b27694.png\";","module.exports = __webpack_public_path__ + \"static/media/puke.4b2f37db.png\";","module.exports = __webpack_public_path__ + \"static/media/dead.1ed5285c.png\";","module.exports = __webpack_public_path__ + \"static/media/idle.3391f1e7.png\";","module.exports = __webpack_public_path__ + \"static/media/joy.fa11b230.png\";","module.exports = __webpack_public_path__ + \"static/media/puke.fb56354c.png\";","module.exports = __webpack_public_path__ + \"static/media/dead.dae8b1a6.png\";","module.exports = __webpack_public_path__ + \"static/media/idle.2979a853.png\";","module.exports = __webpack_public_path__ + \"static/media/joy.92846bbd.png\";","module.exports = __webpack_public_path__ + \"static/media/puke.a396652f.png\";","module.exports = __webpack_public_path__ + \"static/media/dead.6b793ffc.png\";","module.exports = __webpack_public_path__ + \"static/media/idle.f0727a59.png\";","module.exports = __webpack_public_path__ + \"static/media/joy.e4e15212.png\";","module.exports = __webpack_public_path__ + \"static/media/puke.562258ce.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient.56f649e6.png\";","module.exports = __webpack_public_path__ + \"static/media/floor.37c105d5.png\";","module.exports = __webpack_public_path__ + \"static/media/pavement.38c1f5de.png\";","module.exports = __webpack_public_path__ + \"static/media/grass.3098b706.png\";","module.exports = __webpack_public_path__ + \"static/media/shrub.3a52957f.png\";","module.exports = __webpack_public_path__ + \"static/media/city.7a01eff4.png\";","module.exports = __webpack_public_path__ + \"static/media/city-back.41699a50.png\";","var map = {\n\t\"./cloud-0.png\": 1483,\n\t\"./cloud-1.png\": 1484,\n\t\"./cloud-2.png\": 1485\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1482;","module.exports = __webpack_public_path__ + \"static/media/cloud-0.c2b09be0.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud-1.069eb259.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud-2.504be3ed.png\";","module.exports = __webpack_public_path__ + \"static/media/font.b8d1bfa9.png\";","module.exports = __webpack_public_path__ + \"static/media/font.4d6c771c.fnt\";","module.exports = __webpack_public_path__ + \"static/media/logo.7c7e307c.png\";","module.exports = __webpack_public_path__ + \"static/media/play.468603cc.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.671ffdcf.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.092e501d.png\";","module.exports = __webpack_public_path__ + \"static/media/main.040c9d02.mp3\";","module.exports = __webpack_public_path__ + \"static/media/puke.145c2dc5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/joy.a23e8d23.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pop.0063f25d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/whoosh.408dd7fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/stop.b3665476.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ding.9a5d9b62.mp3\";","module.exports = __webpack_public_path__ + \"static/media/heartbeat.fffd7041.mp3\";","export const scenes = {\n  boot: 'boot',\n  main: 'main',\n};\n\nexport const objects = {\n  waste: {\n    general: 'general-waste',\n    plastic: {\n      bottle: 'plastic-bottle',\n    },\n    glass: {\n      bottle: 'glass-bottle',\n    },\n    metal: {\n      can: 'can',\n    },\n    paper: {\n      ball: 'ball',\n    },\n  },\n  bin: {\n    glass: 'glass-bin',\n    paper: 'paper-bin',\n    metal: 'metal-bin',\n    plastic: 'plastic-bin',\n  },\n  back: {\n    gradient: 'gradient',\n    floor: 'floor',\n    pavement: 'pavement',\n    grass: 'grass',\n    shrub: 'shrub',\n    city: 'city',\n    cityBack: 'city-back',\n    clouds: {\n      cloud0: 'cloud-0',\n      cloud1: 'cloud-1',\n      cloud2: 'cloud-2',\n    },\n  },\n};\n\nexport const animations = {\n  bin: {\n    idle: 'idle',\n    joy: 'joy',\n    puke: 'puke',\n    dead: 'dead',\n  },\n};\n\nexport const wasteType = {\n  plastic: 'plastic',\n  glass: 'glass',\n  metal: 'metal',\n  paper: 'paper',\n};\n\nexport const fonts = {\n  main: 'main',\n};\n\nexport const images = {\n  logo: 'logo',\n  play: 'play',\n  icon: 'icon',\n  heart: 'heart',\n};\n\nexport const sounds = {\n  main: 'main',\n  puke: 'puke',\n  joy: 'joy',\n  pop: 'pop',\n  whoosh: 'whoosh',\n  stop: 'stop',\n  ding: 'ding',\n  heartbeat: 'heartbeat',\n};\n\nexport const gameOptions = {\n  showStartScreen: true,\n  lives: 3,\n};\n","export default class LevelManager {\n  constructor() {\n    this.level = 1;\n    this.wasteThrowDelay = 1000;\n    this.numberOfWastes = 1;\n    this.binsThatLevelUp = [1, 3, 6, 9];\n    this.fillLimit = 3;\n    this.wasteProbability = 50;\n  }\n\n  levelUp(bins) {\n    if (bins % 2 === 0) {\n      this.level++;\n    }\n\n    switch (this.level) {\n      case 2:\n        this.wasteThrowDelay = 1000;\n        this.numberOfWastes = 3;\n        this.wasteProbability = 40;\n        break;\n      case 3:\n        this.wasteThrowDelay = 700;\n        this.wasteProbability = 35;\n        break;\n      case 4:\n        this.wasteThrowDelay = 600;\n        this.numberOfWastes = 4;\n        this.wasteProbability = 30;\n\n        break;\n      case 5:\n        this.wasteThrowDelay = 500;\n        this.numberOfWastes = 5;\n        this.wasteProbability = 25;\n        break;\n      default:\n        break;\n    }\n\n    if (this.level > 5) {\n      this.wasteThrowDelay -= 10;\n      this.wasteThrowDelay = Math.max(200, this.wasteThrowDelay);\n      if (this.level % 2 === 0) {\n        this.numberOfWastes++;\n      }\n    }\n  }\n}\n","export function isIntersecting(obj, { x, y }, padding) {\n  const { left, right, top, bottom } = obj.getBounds();\n  return (\n    x >= left - padding &&\n    x <= right + padding &&\n    y >= top - padding &&\n    y <= bottom + padding\n  );\n}\n\nexport function getAnimationName(bin, animationType) {\n  return `${bin}-${animationType}`;\n}\n\nexport function getImageSize(key) {\n  const tex = this.textures.get(key);\n  const { width, height } = tex.getSourceImage();\n  return { width, height };\n}\n","import { GameObjects } from 'phaser';\n\nexport default class Text extends GameObjects.Text {\n  constructor({ scene, text, x, y, fontSize }) {\n    super(scene, x, y, text, {\n      align: 'center',\n      fontSize,\n      fontStyle: 'bold',\n      shadow: {\n        offsetX: 3,\n        offsetY: 1,\n        color: '#6ea2d0',\n        fill: true,\n      },\n      wordWrap: {\n        width: scene.game.config.width,\n        useAdvancedWrap: true,\n      },\n    });\n    scene.add.existing(this);\n  }\n}\n","import { GameObjects } from 'phaser';\nimport Text from './Text';\nimport { images } from '../constants';\n\nexport default class Score extends GameObjects.Group {\n  constructor({ scene, score }) {\n    const offset = 16;\n    const icon = scene.add.image(offset, offset, images.icon).setDepth(1);\n    icon.setPosition(offset + icon.width / 2, offset + icon.height / 2);\n    const text = new Text({\n      scene,\n      text: score,\n      x: icon.width + offset * 2,\n      y: icon.height / 2 - offset * 1.5,\n      fontSize: 80,\n    });\n    super(scene, [text, icon]);\n    text.setOrigin(0, 0).setDepth(1);\n\n    scene.add.existing(this);\n\n    this.icon = icon;\n    this.text = text;\n\n    this.iconTween = scene.tweens.add({\n      targets: [this.icon],\n      duration: 400,\n      ease: 'Quad.easeOut',\n      props: {\n        angle: {\n          value: '+=360',\n        },\n        scale: {\n          value: '+=0.2',\n          yoyo: true,\n        },\n      },\n    });\n  }\n\n  setScore = score => {\n    this.iconTween.restart();\n    this.text.setText(score);\n  };\n}\n","import { GameObjects } from 'phaser';\nimport Text from './Text';\n\nexport default class GameOver extends GameObjects.Group {\n  constructor({ scene }) {\n    const { width, height } = scene.game.config;\n    const text = new Text({\n      scene,\n      text: `WASTED\\n\\nTAP OR CLICK TO RESTART`,\n      x: width / 2,\n      y: height / 3,\n      fontSize: 72,\n    });\n    super(scene, [text]);\n    text.setOrigin(0.5, 0.5);\n    scene.add.existing(this);\n  }\n}\n","import { GameObjects } from 'phaser';\nimport { images } from '../constants';\nimport { getImageSize } from '../utils';\n\nexport default class GameOver extends GameObjects.Container {\n  constructor({ scene, lives }) {\n    super(scene, 0, 0);\n    this.lives = [];\n    for (let i = 0; i < lives; i++) {\n      this.addLife(i);\n    }\n    scene.add.existing(this);\n\n    this.scene = scene;\n  }\n\n  addLife(i) {\n    const { width } = this.scene.game.config;\n    const { width: heartWidth } = getImageSize.call(this.scene, images.heart);\n    const life = this.scene.add\n      .image(width - heartWidth * i, 32, images.heart)\n      .setOrigin(1, 0)\n      .setDepth(1);\n    this.lives.push(life);\n\n    return life;\n  }\n\n  increaseLives() {\n    const life = this.addLife(this.lives.length);\n    this.scene.tweens.add({\n      targets: [life],\n      duration: 250,\n      ease: 'Quad.easeOut',\n      scale: '+=0.5',\n      yoyo: true,\n    });\n  }\n\n  decreaseLives() {\n    const life = this.lives.pop();\n\n    if (this.lives.length > 1) {\n      this.scene.tweens.add({\n        targets: [life],\n        duration: 250,\n        ease: 'Quad.easeOut',\n        scale: '+=0.5',\n        yoyo: true,\n        onComplete: () => life.destroy(),\n      });\n    } else {\n      life.destroy();\n    }\n  }\n}\n","import { GameObjects } from 'phaser';\nimport Text from './Text';\nimport { images } from '../constants';\n\nexport default class Score extends GameObjects.Group {\n  constructor({ scene, maxScore }) {\n    const { width } = scene.game.config;\n    const offset = 16;\n    const icon = scene.add.image(offset, offset, images.icon).setDepth(1);\n    const max = new Text({\n      scene,\n      text: `Max`,\n      x: 0,\n      y: icon.height / 2 - offset * 1.5,\n      fontSize: 80,\n    }).setDepth(1);\n    const score = new Text({\n      scene,\n      text: `is ${maxScore}`,\n      x: 0,\n      y: icon.height / 2 - offset * 1.5,\n      fontSize: 80,\n    });\n    super(scene, [max, score, icon]);\n    score.setOrigin(0, 0).setDepth(1);\n\n    const sumW = max.width + icon.width + score.width + offset * 2;\n    const padding = Math.floor((width - sumW) / 2);\n    max.x = padding;\n    icon.setPosition(\n      max.x + max.width + icon.width / 2 + offset,\n      offset + icon.height / 2\n    );\n    score.x = icon.x + icon.width / 2 + offset;\n\n    scene.add.existing(this);\n\n    this.icon = icon;\n\n    this.iconTween = scene.tweens.add({\n      targets: [this.icon],\n      duration: 400,\n      ease: 'Quad.easeOut',\n      props: {\n        angle: {\n          value: '+=360',\n        },\n        scale: {\n          value: '+=0.2',\n          yoyo: true,\n        },\n      },\n    });\n  }\n}\n","import {\n  objects,\n  scenes,\n  fonts,\n  images,\n  animations,\n  sounds,\n} from '../constants';\nimport { getAnimationName } from '../utils';\nimport { Scene } from 'phaser';\nimport { Text } from '../gui';\n\nexport default class Boot extends Scene {\n  constructor() {\n    super({ key: scenes.boot });\n  }\n\n  preload() {\n    const { width, height } = this.game.config;\n    const div = width < 900 ? 1.3 : 2;\n    const fontSize = width < 900 ? 52 : 56;\n    const boxWidth = width / div;\n    const boxHeight = 80;\n    const boxX = width / 2 - boxWidth / 2;\n    const boxY = height / 2;\n    const barOffset = 20;\n    const loading = new Text({\n      scene: this,\n      x: boxX,\n      y: boxY - barOffset,\n      text: 'Loading...',\n      fontSize,\n    }).setOrigin(0, 1);\n    const percent = new Text({\n      scene: this,\n      x: boxX + boxWidth,\n      y: boxY - barOffset,\n      text: '0%',\n      fontSize,\n    }).setOrigin(1, 1);\n    const progressBar = this.add.graphics();\n    const progressBox = this.add.graphics();\n    progressBox.fillStyle(0xd4ecf7, 0.5);\n    progressBox.fillRoundedRect(boxX, boxY, boxWidth, boxHeight, 16);\n    this.load.on('progress', value => {\n      progressBar.clear();\n      progressBar.fillStyle(0xf3f3ff);\n      progressBar.fillRoundedRect(\n        boxX + barOffset,\n        boxY + barOffset,\n        (boxWidth - barOffset * 2) * value,\n        boxHeight / 2,\n        8\n      );\n      percent.setText(`${parseInt(value * 100)}%`);\n    });\n    this.load.on('complete', () => {\n      progressBar.destroy();\n      progressBox.destroy();\n      loading.destroy();\n    });\n\n    const { load } = this;\n    // Waste\n    load.image(\n      objects.waste.general,\n      require('../assets/sprites/waste/general.png')\n    );\n    load.image(\n      objects.waste.plastic.bottle,\n      require('../assets/sprites/waste/plastic/bottle.png')\n    );\n    load.image(\n      objects.waste.glass.bottle,\n      require('../assets/sprites/waste/glass/bottle.png')\n    );\n    load.image(\n      objects.waste.metal.can,\n      require('../assets/sprites/waste/metal/can.png')\n    );\n    load.image(\n      objects.waste.paper.ball,\n      require('../assets/sprites/waste/paper/ball.png')\n    );\n    // Bins\n    for (const bin of Object.values(objects.bin)) {\n      for (const anim of Object.values(animations.bin)) {\n        load.spritesheet(\n          getAnimationName(bin, anim),\n          require(`../assets/sprites/bin/${bin}/${anim}.png`),\n          {\n            frameWidth: 450,\n            frameHeight: 450,\n          }\n        );\n      }\n    }\n    // Back\n    load.image(\n      objects.back.gradient,\n      require('../assets/sprites/background/gradient.png')\n    );\n    load.image(\n      objects.back.floor,\n      require('../assets/sprites/background/floor.png')\n    );\n    load.image(\n      objects.back.pavement,\n      require('../assets/sprites/background/pavement.png')\n    );\n    load.image(\n      objects.back.grass,\n      require('../assets/sprites/background/grass.png')\n    );\n    load.image(\n      objects.back.shrub,\n      require('../assets/sprites/background/shrub.png')\n    );\n    load.image(\n      objects.back.city,\n      require('../assets/sprites/background/city.png')\n    );\n    load.image(\n      objects.back.cityBack,\n      require('../assets/sprites/background/city-back.png')\n    );\n    for (let i = 0; i < 3; i++) {\n      load.image(\n        objects.back.clouds[`cloud${i}`],\n        require(`../assets/sprites/background/cloud-${i}.png`)\n      );\n    }\n    // Font\n    load.bitmapFont(\n      fonts.main,\n      require('../assets/fonts/font.png'),\n      require('../assets/fonts/font.fnt')\n    );\n    // Misc\n    load.image(images.logo, require('../assets/sprites/logo.png'));\n    load.image(images.play, require('../assets/sprites/play.png'));\n    load.image(images.icon, require('../assets/sprites/icon.png'));\n    load.image(images.heart, require('../assets/sprites/heart.png'));\n    // Sounds\n    load.audio(sounds.main, require('../assets/sounds/main.mp3'));\n    load.audio(sounds.puke, require('../assets/sounds/puke.mp3'));\n    load.audio(sounds.joy, require('../assets/sounds/joy.mp3'));\n    load.audio(sounds.pop, require('../assets/sounds/pop.mp3'));\n    load.audio(sounds.whoosh, require('../assets/sounds/whoosh.mp3'));\n    load.audio(sounds.stop, require('../assets/sounds/stop.mp3'));\n    load.audio(sounds.ding, require('../assets/sounds/ding.mp3'));\n    load.audio(sounds.heartbeat, require('../assets/sounds/heartbeat.mp3'));\n  }\n\n  create() {\n    this.scene.start(scenes.main);\n  }\n}\n","import Phaser from 'phaser';\n\nconst commonMethods = {\n  dispose() {\n    this.destroy();\n    delete this;\n  },\n  getRandomVelocity() {\n    const { width } = this.scene.game.config;\n    let velX = Phaser.Math.Between(0, 8);\n    velX = this.x < width / 2 ? velX : -velX;\n    const velY = Phaser.Math.Between(-25, -30);\n\n    return { velX, velY };\n  },\n  getRandomAngleVelocity() {\n    const dir = Phaser.Math.Between(0, 1) === 1 ? -1 : 1;\n    const vel = Phaser.Math.RND.realInRange(0.01, 0.06);\n\n    return vel * dir;\n  },\n  throw() {\n    const { velX, velY } = this.getRandomVelocity();\n    this.setVisible(true).setVelocity(velX, velY);\n  },\n  throwWithRandomAngle() {\n    const { velX, velY } = this.getRandomVelocity();\n    const angleVel = this.getRandomAngleVelocity();\n    this.setVisible(true)\n      .setAngularVelocity(angleVel)\n      .setVelocity(velX, velY);\n  },\n};\n\nexport default function addCommonMethods(obj) {\n  for (const methodName of Object.keys(commonMethods)) {\n    obj[methodName] = commonMethods[methodName];\n  }\n}\n","import Phaser, { Physics } from 'phaser';\nimport { addCommonMethods } from '../helpers';\n\nexport default class Waste extends Physics.Matter.Sprite {\n  constructor({ scene, key, type }) {\n    const { width, height } = scene.game.config;\n\n    super(scene.matter.world, 0, height, key);\n\n    scene.add.existing(this);\n    this.setBounce(0.95).setVisible(false);\n\n    const x = Phaser.Math.Between(this.width / 2, width - this.width);\n    const y = height;\n    this.setPosition(x, y);\n    this.type = type;\n\n    addCommonMethods(this);\n  }\n}\n","import { objects } from '../../../constants';\nimport Waste from '../Waste';\n\nexport default class General extends Waste {\n  constructor({ scene }) {\n    super({ scene, key: objects.waste.general });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Waste from '../Waste';\n\nexport default class Plastic extends Waste {\n  constructor({ scene }) {\n    super({\n      scene,\n      key: objects.waste.plastic.bottle,\n      type: wasteType.plastic,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Waste from '../Waste';\n\nexport default class Glass extends Waste {\n  constructor({ scene }) {\n    super({\n      scene,\n      key: objects.waste.glass.bottle,\n      type: wasteType.glass,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Waste from '../Waste';\n\nexport default class Metal extends Waste {\n  constructor({ scene }) {\n    super({\n      scene,\n      key: objects.waste.metal.can,\n      type: wasteType.metal,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Waste from '../Waste';\n\nexport default class Paper extends Waste {\n  constructor({ scene }) {\n    super({\n      scene,\n      key: objects.waste.paper.ball,\n      type: wasteType.paper,\n    });\n  }\n}\n","import { General, Plastic, Glass, Metal, Paper } from './types';\nimport { wasteType } from '../../constants';\nimport Phaser from 'phaser';\nexport default class WasteFactory {\n  constructor({ scene }) {\n    this.scene = scene;\n    this.wasteTypes = [General, Plastic, Glass, Metal, Paper];\n  }\n  getRandomWaste({ neededType, probability } = {}) {\n    const shouldGiveNeededType =\n      Phaser.Math.Between(0, 100) >= 100 - probability;\n    const type =\n      neededType && shouldGiveNeededType\n        ? this.getOfType(neededType)\n        : Phaser.Math.RND.pick(this.wasteTypes);\n\n    return new type({ scene: this.scene });\n  }\n\n  getWasteOfType(neededType) {\n    const type = this.getOfType(neededType);\n    return new type({ scene: this.scene });\n  }\n\n  getOfType(type) {\n    switch (type) {\n      case wasteType.glass:\n        return Glass;\n      case wasteType.plastic:\n        return Plastic;\n      case wasteType.metal:\n        return Metal;\n      case wasteType.paper:\n        return Paper;\n      default:\n        return General;\n    }\n  }\n}\n","import { Physics } from 'phaser';\nimport { animations, sounds } from '../../constants';\nimport { getAnimationName } from '../../utils';\n\nexport default class Bin extends Physics.Matter.Sprite {\n  constructor({ scene, x, key, type }) {\n    const { height } = scene.game.config;\n    const size = 400;\n\n    super(scene.matter.world, x, height - size);\n\n    this.setDisplaySize(size * 0.8, 10)\n      .setSensor(true)\n      .setStatic(true);\n\n    this.animJoy = getAnimationName(key, animations.bin.joy);\n    this.animIdle = getAnimationName(key, animations.bin.idle);\n    this.animPuke = getAnimationName(key, animations.bin.puke);\n    this.animDead = getAnimationName(key, animations.bin.dead);\n\n    this.binImage = scene.add.sprite(x, height, key);\n    this.binImage.anims.play(this.animIdle);\n    this.binImage.setOrigin(0.5, 1);\n    this.binImage.on('animationcomplete', this.handleAnimationComplete, this);\n\n    this.type = type;\n    this.fill = 0;\n  }\n\n  handleAnimationComplete(anim) {\n    if (anim.key === this.animJoy || anim.key === this.animPuke) {\n      this.binImage.anims.play(this.animIdle);\n    }\n  }\n\n  die() {\n    this.destroy();\n    this.binImage.anims.play(this.animDead);\n  }\n\n  checkIfTypeMatch(type) {\n    return this.type === type;\n  }\n\n  checkIfFull(limit) {\n    return this.fill === limit;\n  }\n\n  hitWrong() {\n    this.scene.sound.play(sounds.puke);\n    this.binImage.anims.play(this.animPuke);\n  }\n\n  hitRight() {\n    this.scene.sound.play(sounds.joy, { volume: 0.2 });\n    this.binImage.anims.play(this.animJoy);\n    this.increaseFill();\n  }\n\n  increaseFill() {\n    this.fill++;\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Bin from '../Bin';\n\nexport default class Plastic extends Bin {\n  constructor({ scene, x }) {\n    super({\n      scene,\n      x,\n      key: objects.bin.plastic,\n      type: wasteType.plastic,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Bin from '../Bin';\n\nexport default class Glass extends Bin {\n  constructor({ scene, x }) {\n    super({\n      scene,\n      x,\n      key: objects.bin.glass,\n      type: wasteType.glass,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Bin from '../Bin';\n\nexport default class Metal extends Bin {\n  constructor({ scene, x }) {\n    super({\n      scene,\n      x,\n      key: objects.bin.metal,\n      type: wasteType.metal,\n    });\n  }\n}\n","import { objects, wasteType } from '../../../constants';\nimport Bin from '../Bin';\n\nexport default class Paper extends Bin {\n  constructor({ scene, x }) {\n    super({\n      scene,\n      x,\n      key: objects.bin.paper,\n      type: wasteType.paper,\n    });\n  }\n}\n","import { Plastic, Glass, Metal, Paper } from './types';\nimport { wasteType } from '../../constants';\nimport Phaser from 'phaser';\nexport default class WasteFactory {\n  constructor({ scene }) {\n    this.scene = scene;\n    this.binTypes = [Plastic, Glass, Metal, Paper];\n  }\n  getRandomBin({ x, types = this.binTypes }) {\n    const randomType = Phaser.Math.RND.pick(types);\n    return new randomType({ scene: this.scene, x });\n  }\n  getRandomBinExceptOf({ x, type }) {\n    const types = this.binTypes.filter(t => this.getOfType(type) !== t);\n    return this.getRandomBin({ x, types });\n  }\n  getOfType(type) {\n    switch (type) {\n      case wasteType.glass:\n        return Glass;\n      case wasteType.plastic:\n        return Plastic;\n      case wasteType.metal:\n        return Metal;\n      case wasteType.paper:\n        return Paper;\n      default:\n        return;\n    }\n  }\n}\n","import Phaser, { Physics } from 'phaser';\nimport { addCommonMethods } from '../helpers';\nimport { images } from '../../constants';\n\nexport default class Life extends Physics.Matter.Sprite {\n  constructor({ scene }) {\n    const { width, height } = scene.game.config;\n\n    super(scene.matter.world, 0, height, images.heart);\n\n    scene.add.existing(this);\n    this.setBounce(0.95)\n      .setVisible(false)\n      .setInteractive()\n      .setScale(1.2)\n      .setSensor(true);\n\n    const x = Phaser.Math.Between(this.width / 2, width - this.width);\n    const y = height;\n    this.setPosition(x, y);\n\n    addCommonMethods(this);\n  }\n}\n","import {\n  scenes,\n  gameOptions,\n  images,\n  objects,\n  animations,\n  sounds,\n} from '../constants';\nimport Phaser, { Scene } from 'phaser';\nimport { WasteFactory, BinFactory, Life } from '../sprites';\nimport {\n  isIntersecting,\n  LevelManager,\n  getAnimationName,\n  getImageSize,\n} from '../utils';\nimport { Score, GameOver, Lives, MaxScore, Text } from '../gui';\n\nexport default class Main extends Scene {\n  constructor() {\n    super({ key: scenes.main });\n  }\n\n  create() {\n    const { width, height } = this.game.config;\n    const { showStartScreen, lives } = gameOptions;\n\n    // World\n    const wallOffset = 200;\n    this.worldBounds = this.matter.world.setBounds(\n      -wallOffset,\n      0,\n      width + wallOffset * 2,\n      height + wallOffset\n    );\n\n    // General\n    this.levelManager = new LevelManager();\n    this.lives = lives;\n    this.binsFilled = 0;\n    this.menuGroup = this.add.group();\n\n    this.music = this.sound.add(sounds.main, { loop: true, volume: 0.3 });\n\n    this.addBackground();\n    this.addAnimations();\n\n    // Waste\n    this.wasteFactory = new WasteFactory({ scene: this });\n    this.wastes = [];\n\n    // Bin\n    this.binFactory = new BinFactory({ scene: this });\n\n    // Controls\n    const swipe = this.gestures.add.swipe({\n      threshold: 10,\n      velocityThreshold: 1000,\n      direction: '8dir',\n    });\n    swipe.on('swipe', this.handleSwipe, this);\n\n    if (showStartScreen) {\n      this.showStartScreen();\n    } else {\n      this.prepareToStart();\n    }\n  }\n\n  showStartScreen() {\n    const { width, height } = this.game.config;\n\n    const logoScale = width <= 960 ? 0.85 : 1;\n    const logo = this.add\n      .image(width / 2, height / 3, images.logo)\n      .setScale(logoScale)\n      .setOrigin(0.5, 1);\n    this.menuGroup.add(logo);\n\n    const play = this.add\n      .image(width / 2, logo.y + logo.height * 1.5, images.play)\n      .setOrigin(0.5, 0.5)\n      .setInteractive();\n    this.tweens.add({\n      targets: play,\n      scale: '+=0.05',\n      repeat: -1,\n      duration: 600,\n      repeatDelay: 3000,\n      ease: 'Back.easeOut',\n      yoyo: true,\n    });\n    this.menuGroup.add(play);\n\n    const maxScore = localStorage.getItem('maxScore') || 0;\n    const maxScoreGUI = new MaxScore({ scene: this, maxScore });\n    this.menuGroup.addMultiple(maxScoreGUI.getChildren());\n\n    const moto = new Text({\n      scene: this,\n      text: 'no future without it',\n      x: width / 2,\n      y: height,\n      fontSize: 56,\n    }).setOrigin(0.5, 1);\n    this.menuGroup.add(moto);\n\n    play.once('pointerdown', () => {\n      this.prepareToStart();\n    });\n  }\n\n  prepareToStart() {\n    const { width, height } = this.game.config;\n\n    this.tweens.add({\n      targets: this.menuGroup.getChildren(),\n      y: -height,\n      duration: 500,\n      ease: 'Cubic.easeIn',\n      callbackScope: this,\n      onComplete: () => {\n        this.menuGroup.toggleVisible();\n        this.menuGroup.active = false;\n      },\n    });\n\n    this.bin = this.binFactory.getRandomBin({ x: width });\n    this.sound.play(sounds.whoosh, { rate: 0.5 });\n    this.tweens.add({\n      targets: [this.bin, this.bin.binImage],\n      x: width / 2,\n      duration: 500,\n      ease: 'Cubic.easeOut',\n      callbackScope: this,\n      onComplete: this.startGame,\n    });\n  }\n\n  startGame() {\n    this.music.play();\n    gameOptions.showStartScreen = false;\n    this.startWasteTimer();\n    this.startLivesTimer();\n    this.addScore();\n    this.livesGUI = new Lives({ scene: this, lives: this.lives });\n  }\n\n  gameOver() {\n    this.music.stop();\n    this.sound.play(sounds.stop, { volume: 0.2 });\n    this.wasteTimer.destroy();\n    this.livesTimer.destroy();\n    this.livesGUI.destroy();\n    this.bin.die();\n    this.scoreGUI.toggleVisible();\n    const gameOverGUI = new GameOver({ scene: this });\n    const prevMaxScore = localStorage.getItem('maxScore') || 0;\n    const maxScore = Math.max(prevMaxScore, this.score);\n    new MaxScore({ scene: this, maxScore });\n    localStorage.setItem('maxScore', maxScore);\n    this.input.once('pointerdown', () => {\n      gameOverGUI.destroy();\n      this.bin.binImage.destroy();\n      this.cameras.main.flash(350, 255, 255, 255, false, (cam, progress) => {\n        if (progress === 1) {\n          this.scene.restart();\n        }\n      });\n    });\n  }\n\n  addBackground() {\n    const { width, height } = this.game.config;\n    this.add\n      .image(-100, 0, objects.back.gradient)\n      .setOrigin(0, 0)\n      .setDisplaySize(width + 100, height);\n\n    const floorTop = this.fillSceneContinuous(objects.back.floor, height);\n    const pavementTop = this.fillScene(objects.back.pavement, floorTop);\n    const grassTop = this.fillSceneContinuous(objects.back.grass, pavementTop);\n    this.fillScene(objects.back.cityBack, grassTop - 20);\n    this.fillScene(objects.back.city, grassTop);\n    this.fillScene(objects.back.shrub, grassTop);\n\n    this.addClouds();\n  }\n\n  addClouds() {\n    const { width } = this.game.config;\n    const leftToRight = Phaser.Math.Between(0, 1) === 1;\n    this.cloudTimer = this.time.addEvent({\n      delay: width * 12,\n      callback: () => {\n        this.addCloud(leftToRight);\n      },\n      callbackScope: this,\n      loop: true,\n    });\n    this.addCloud(leftToRight);\n  }\n\n  addCloud(leftToRight) {\n    const { width } = this.game.config;\n    const index = Phaser.Math.Between(0, 2);\n    const scale = Phaser.Math.RND.realInRange(0.6, 1).toFixed(2);\n    const offset = 300;\n    const [initX, finalX] = leftToRight\n      ? [-offset, width + offset]\n      : [width + offset, -offset];\n    const key = objects.back.clouds[`cloud${index}`];\n\n    const cloud = this.add\n      .image(initX, 100, key)\n      .setOrigin(0, 0)\n      .setScale(scale);\n    this.tweens.add({\n      targets: [cloud],\n      x: {\n        value: {\n          getEnd: () => finalX,\n        },\n      },\n      duration: width * 30,\n      callbackScope: this,\n      onComplete: () => cloud.destroy(),\n    });\n  }\n\n  fillSceneContinuous(key, y) {\n    const { width } = this.game.config;\n    const { height: imageHeight } = getImageSize.call(this, key);\n    this.add\n      .image(-100, y, key)\n      .setOrigin(0, 1)\n      .setDisplaySize(width + 200, imageHeight);\n\n    return y - imageHeight;\n  }\n\n  fillScene(key, y) {\n    const { width } = this.game.config;\n    const { width: imageWidth, height: imageHeight } = getImageSize.call(\n      this,\n      key\n    );\n    const images = Math.ceil(width / imageWidth);\n    const offset = Math.floor(Math.abs(width - images * imageWidth) / 2);\n    for (let i = 0; i < images; i++) {\n      this.add.image(i * imageWidth - offset, y, key).setOrigin(0, 1);\n    }\n\n    return y - imageHeight;\n  }\n\n  getImageSize(key) {\n    const tex = this.textures.get(key);\n    const { width, height } = tex.getSourceImage();\n    return { width, height };\n  }\n\n  addAnimations() {\n    for (const bin of Object.values(objects.bin)) {\n      this.addBinAnimations(bin);\n    }\n  }\n\n  addBinAnimations(bin) {\n    for (const anim of Object.values(animations.bin)) {\n      const animName = getAnimationName(bin, anim);\n      const isIdle = anim === animations.bin.idle;\n      const isDead = anim === animations.bin.dead;\n      const frameRate = isIdle ? 80 : 30;\n      const repeat = isIdle ? -1 : isDead ? 0 : 1;\n      this.anims.create({\n        key: animName,\n        frames: this.anims.generateFrameNumbers(animName),\n        frameRate,\n        repeat,\n      });\n    }\n  }\n\n  addScore() {\n    this.score = 0;\n    this.scoreGUI = new Score({ scene: this, score: this.score });\n  }\n\n  handleWasteCollideWalls({ gameObjectA: waste }) {\n    this.diposeWaste(waste);\n  }\n\n  handleWasteCollideBin({ gameObjectA: waste }) {\n    if (waste.body.velocity.y > 0) {\n      this.hitBin(waste);\n    }\n  }\n\n  hitBin(waste) {\n    this.diposeWaste(waste);\n    const typeMatch = this.bin.checkIfTypeMatch(waste.type);\n\n    if (typeMatch) {\n      this.scoreGUI.setScore(++this.score);\n      this.bin.hitRight();\n    } else {\n      this.bin.hitWrong();\n      this.cameras.main.shake(100, 0.01);\n      this.lives--;\n      this.livesGUI.decreaseLives();\n    }\n\n    if (this.lives <= 0) {\n      this.gameOver();\n    }\n\n    if (this.bin.checkIfFull(this.levelManager.fillLimit)) {\n      this.replaceBin();\n    }\n  }\n\n  replaceBin() {\n    const { width } = this.game.config;\n\n    this.wasteTimer.destroy();\n    this.moveWasteAway();\n    this.sound.play(sounds.ding, { volume: 0.8 });\n\n    this.tweens.add({\n      targets: [this.bin, this.bin.binImage],\n      y: '-=300',\n      angle: `+=${Phaser.Math.Between(0, 1) === 0 ? 15 : -15}`,\n      duration: 300,\n      callbackScope: this,\n      yoyo: true,\n      ease: 'Cubic.easeOut',\n      onComplete: oldBinJumped,\n    });\n    function oldBinJumped() {\n      this.sound.play(sounds.whoosh, { rate: 0.5 });\n      this.tweens.add({\n        targets: [this.bin, this.bin.binImage],\n        x: -this.bin.binImage.width,\n        duration: 500,\n        ease: 'Cubic.easeIn',\n        callbackScope: this,\n        onComplete: oldBinMoved,\n      });\n    }\n    function oldBinMoved() {\n      this.sound.play(sounds.whoosh, { rate: 0.55 });\n      this.bin.destroy();\n      this.bin = this.binFactory.getRandomBinExceptOf({\n        type: this.bin.type,\n        x: width + this.bin.binImage.width,\n      });\n\n      this.tweens.add({\n        targets: [this.bin, this.bin.binImage],\n        x: width / 2,\n        duration: 500,\n        delay: 150,\n        callbackScope: this,\n        ease: 'Cubic.easeOut',\n        onComplete: this.startNewLevel,\n      });\n    }\n  }\n\n  moveWasteAway() {\n    for (const waste of this.wastes) {\n      const dir = waste.body.velocity.x > 0 ? 1 : -1;\n      waste.setVelocity(20 * dir, -20);\n    }\n  }\n\n  startNewLevel() {\n    this.levelManager.levelUp(++this.binsFilled);\n    this.startWasteTimer();\n  }\n\n  diposeWaste(waste) {\n    const wasteIndex = this.wastes.findIndex(el => el === waste);\n    this.wastes.splice(wasteIndex, 1);\n    waste.dispose();\n  }\n\n  startLivesTimer() {\n    if (this.livesTimer) {\n      this.livesTimer.destroy();\n    }\n\n    this.livesTimer = this.time.addEvent({\n      delay: 16000,\n      callback: this.throwLife,\n      callbackScope: this,\n      loop: true,\n    });\n  }\n\n  throwLife() {\n    if (this.lives < gameOptions.lives) {\n      const life = new Life({ scene: this });\n      this.tweens.add({\n        targets: life,\n        duration: 450,\n        ease: 'Sine.easeOut',\n        scale: '+=0.3',\n        yoyo: true,\n        repeat: -1,\n      });\n      life.throw();\n      this.sound.play(sounds.heartbeat, { detune: 1200 });\n      life.once('pointerdown', () => {\n        if (this.lives >= gameOptions.lives) {\n          return;\n        }\n        this.lives++;\n        this.lives = Math.min(this.lives, gameOptions.lives);\n        this.livesGUI.increaseLives();\n        life.destroy();\n      });\n      this.matterCollision.addOnCollideStart({\n        objectA: life,\n        objectB: [\n          this.worldBounds.walls.left,\n          this.worldBounds.walls.right,\n          this.worldBounds.walls.bottom,\n        ],\n        callback: () => life.destroy(),\n        context: this,\n      });\n    }\n  }\n\n  startWasteTimer() {\n    if (this.wasteTimer) {\n      this.wasteTimer.destroy();\n    }\n\n    this.wasteTimer = this.time.addEvent({\n      delay: this.levelManager.wasteThrowDelay,\n      callback: this.throwWaste,\n      callbackScope: this,\n      loop: true,\n    });\n  }\n\n  createWasteOfBinType() {\n    const waste = this.wasteFactory.getWasteOfType(this.bin.type);\n    this.addCollisionToWaste(waste);\n    this.wastes.push(waste);\n    return waste;\n  }\n\n  createRandomWaste() {\n    const waste = this.wasteFactory.getRandomWaste({\n      neededType: this.bin.type,\n      probability: this.levelManager.wasteProbability,\n    });\n    this.addCollisionToWaste(waste);\n    this.wastes.push(waste);\n    return waste;\n  }\n\n  addCollisionToWaste(waste) {\n    this.matterCollision.addOnCollideStart({\n      objectA: waste,\n      objectB: [\n        this.worldBounds.walls.left,\n        this.worldBounds.walls.right,\n        this.worldBounds.walls.bottom,\n      ],\n      callback: this.handleWasteCollideWalls,\n      context: this,\n    });\n    this.matterCollision.addOnCollideStart({\n      objectA: waste,\n      objectB: [this.bin],\n      callback: this.handleWasteCollideBin,\n      context: this,\n    });\n    this.matterCollision.addOnCollideStart({\n      objectA: waste,\n      objectB: this.wastes,\n      callback: () => {\n        const detune = Phaser.Math.Between(-300, 300);\n        this.sound.play(sounds.pop, { detune });\n      },\n      context: this,\n    });\n  }\n\n  throwWaste() {\n    if (this.wastes.length < this.levelManager.numberOfWastes) {\n      const waste = this.createRandomWaste();\n      waste.throwWithRandomAngle();\n    }\n  }\n\n  handleSwipe(swipe) {\n    const { x, y, left, right, up, down } = swipe;\n    const vx = Math.min(Math.ceil(swipe.getVelocityX() / 80), 30);\n    const vy = Math.min(Math.ceil(swipe.getVelocityY() / 100), 30);\n    this.wastes.forEach(waste => {\n      if (isIntersecting(waste, { x, y }, 50)) {\n        const detune = Phaser.Math.Between(-300, 300);\n        this.sound.play(sounds.whoosh, { detune });\n        let velX = left ? -vx : right ? vx : 0;\n        let velY = up ? -vy : down ? vy : 0;\n        waste.setVelocity(velX, velY);\n      }\n    });\n  }\n}\n","import './index.css';\nimport { Boot, Main } from './scenes';\nimport Phaser from 'phaser';\nimport GesturesPlugin from 'phaser3-rex-plugins/plugins/gestures-plugin.js';\nimport PhaserMatterCollisionPlugin from 'phaser-matter-collision-plugin';\n// import * as serviceWorker from './serviceWorker';\n\n/**\n * @see {@link https://photonstorm.github.io/phaser3-docs/global.html#GameConfig}\n */\nconst config = {\n  type: Phaser.CANVAS,\n  title: 'Phaser Template',\n  // the following 2 values are from `package.json`\n  url: process.env.HOMEPAGE,\n  version: process.env.VERSION,\n  scene: [Boot, Main],\n  physics: {\n    default: 'matter',\n    matter: {\n      gravity: { y: 0.9 },\n      debug: process.env.NODE_ENV === 'development',\n      enableSleeping: false,\n    },\n  },\n  plugins: {\n    scene: [\n      {\n        key: 'gestures',\n        plugin: GesturesPlugin,\n        mapping: 'gestures',\n      },\n      {\n        plugin: PhaserMatterCollisionPlugin,\n        key: 'matterCollision',\n        mapping: 'matterCollision',\n      },\n    ],\n  },\n  disableContextMenu: true,\n  backgroundColor: 'rgb(168, 210, 234)',\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n  },\n};\nlet gameOptions = {\n  defaultSize: {\n    width: 750,\n    height: 1334,\n    maxRatio: 4 / 3,\n  },\n};\n\nwindow.onload = function() {\n  let width = gameOptions.defaultSize.width;\n  let height = gameOptions.defaultSize.height;\n  let perfectRatio = width / height;\n  let innerWidth = window.innerWidth;\n  let innerHeight = window.innerHeight;\n  let actualRatio = Math.min(\n    innerWidth / innerHeight,\n    gameOptions.defaultSize.maxRatio\n  );\n  if (perfectRatio > actualRatio) {\n    height = width / actualRatio;\n  } else {\n    width = height * actualRatio;\n  }\n\n  config.scale.width = width;\n  config.scale.height = height;\n\n  new Phaser.Game(config);\n  window.focus();\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}